// 재귀 함수
// 함수가 함수 자신을 호출하는 함수

// 쓸 일은 그렇게 많지 않음
// 알고리즘 문제 풀 때 가끔 사용
// function add() {
//   add();
// }

// 임시로 데이터베이스에 추가할 때 사용할 수 있다.

function add(n) {
  // 얼마나 반복 실행 시킬건지
  if (n < 5) {
    add(n + 1);
    console.log(n);
  }
}

add(0); // 4 3 2 1 0 출력

// 함수의 실행 컨텍스트
// add -> add2 -> add3 -> add4
// add4 -> 실행이 끝나고 -> add3 -> 실행이 끝나고 -> add2 -> 실행이 끝나고 -> add1 -> 실행이 끝나고 -> add0

// 함수가 호출되면 실행 컨텍스트가 생성되고
// 함수의 안에서 함수를 호출하면서 실행 컨텍스트가 쌓이고
// 뒤에서부터 실행하고 실행컨텍스트 제거

// 실행 컨텍스트 중요

// 재귀함수 좀 더 써보기
// 피보나치 수열을 재귀로
// 피보나치 수열 수학적인 성질
// 황금비 연속된 두 항의 비율
// 0 1 1 2 3 5 8 13 21  처럼
// 이전 두 항의 합으로 만들어진 수열
// 재귀함수를 사용해서 피보나치 수열을 만들었다.
function fibonacci(n) {
  if (n < 2) return n;
  // 이전 두 항을 더해서 반환
  return fibonacci(n - 1) + fibonacci(n - 2);
}

for (let i = 0; i < 20; i++) {
  console.log(fibonacci(i));
}
